{"id":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","dependencies":[{"name":"/Users/mjcampagna/Projects/react-parcel/package.json","includedInParent":true,"mtime":1558820963467},{"name":"/Users/mjcampagna/Projects/react-parcel/.babelrc","includedInParent":true,"mtime":1558820966347},{"name":"/Users/mjcampagna/Projects/react-parcel/node_modules/date-fns/esm/isSameISOWeekYear/package.json","includedInParent":true,"mtime":499162500000},{"name":"../startOfISOWeekYear/index.js","loc":{"line":1,"column":31},"parent":"/Users/mjcampagna/Projects/react-parcel/node_modules/date-fns/esm/isSameISOWeekYear/index.js","resolved":"/Users/mjcampagna/Projects/react-parcel/node_modules/date-fns/esm/startOfISOWeekYear/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSameISOWeekYear;\n\nvar _index = _interopRequireDefault(require(\"../startOfISOWeekYear/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\nfunction isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfYear = (0, _index.default)(dirtyDateLeft);\n  var dateRightStartOfYear = (0, _index.default)(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":3,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":32,"column":15}},{"name":"isSameISOWeekYear","generated":{"line":41,"column":9},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":32,"column":24}},{"generated":{"line":41,"column":26},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":32,"column":15}},{"name":"dirtyDateLeft","generated":{"line":41,"column":27},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":32,"column":42}},{"generated":{"line":41,"column":40},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":32,"column":15}},{"name":"dirtyDateRight","generated":{"line":41,"column":42},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":32,"column":57}},{"generated":{"line":41,"column":56},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":32,"column":15}},{"generated":{"line":41,"column":58},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":32,"column":73}},{"generated":{"line":42,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":33,"column":2}},{"name":"arguments","generated":{"line":42,"column":6},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":33,"column":6}},{"generated":{"line":42,"column":15},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":33,"column":15}},{"name":"length","generated":{"line":42,"column":16},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":33,"column":16}},{"generated":{"line":42,"column":22},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":33,"column":6}},{"generated":{"line":42,"column":25},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":33,"column":25}},{"generated":{"line":42,"column":26},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":33,"column":2}},{"generated":{"line":42,"column":28},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":33,"column":28}},{"generated":{"line":43,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":34,"column":4}},{"generated":{"line":43,"column":10},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":34,"column":10}},{"name":"TypeError","generated":{"line":43,"column":14},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":34,"column":14}},{"generated":{"line":43,"column":23},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":34,"column":10}},{"generated":{"line":43,"column":24},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":35,"column":6}},{"name":"arguments","generated":{"line":43,"column":60},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":35,"column":42}},{"generated":{"line":43,"column":69},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":35,"column":51}},{"name":"length","generated":{"line":43,"column":70},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":35,"column":52}},{"generated":{"line":43,"column":76},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":35,"column":6}},{"generated":{"line":43,"column":79},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":35,"column":61}},{"generated":{"line":43,"column":89},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":34,"column":10}},{"generated":{"line":43,"column":90},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":34,"column":4}},{"generated":{"line":44,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":37,"column":3}},{"generated":{"line":46,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":39,"column":2}},{"name":"dateLeftStartOfYear","generated":{"line":46,"column":6},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":39,"column":6}},{"generated":{"line":46,"column":25},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":39,"column":25}},{"generated":{"line":46,"column":28},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":39,"column":28}},{"name":"dirtyDateLeft","generated":{"line":46,"column":48},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":39,"column":47}},{"generated":{"line":46,"column":61},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":39,"column":28}},{"generated":{"line":46,"column":62},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":39,"column":2}},{"generated":{"line":47,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":40,"column":2}},{"name":"dateRightStartOfYear","generated":{"line":47,"column":6},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":40,"column":6}},{"generated":{"line":47,"column":26},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":40,"column":26}},{"generated":{"line":47,"column":29},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":40,"column":29}},{"name":"dirtyDateRight","generated":{"line":47,"column":49},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":40,"column":48}},{"generated":{"line":47,"column":63},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":40,"column":29}},{"generated":{"line":47,"column":64},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":40,"column":2}},{"generated":{"line":48,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":2}},{"name":"dateLeftStartOfYear","generated":{"line":48,"column":9},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":9}},{"generated":{"line":48,"column":28},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":28}},{"name":"getTime","generated":{"line":48,"column":29},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":29}},{"generated":{"line":48,"column":36},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":9}},{"name":"dateRightStartOfYear","generated":{"line":48,"column":43},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":43}},{"generated":{"line":48,"column":63},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":63}},{"name":"getTime","generated":{"line":48,"column":64},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":64}},{"generated":{"line":48,"column":71},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":43}},{"generated":{"line":48,"column":73},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":42,"column":2}},{"generated":{"line":49,"column":0},"source":"../node_modules/date-fns/esm/isSameISOWeekYear/index.js","original":{"line":43,"column":1}}],"sources":{"../node_modules/date-fns/esm/isSameISOWeekYear/index.js":"import startOfISOWeekYear from '../startOfISOWeekYear/index.js'\n\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft)\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight)\n\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime()\n}\n"},"lineCount":null}},"error":null,"hash":"02180890544031aaa415e8d290c79020","cacheData":{"env":{}}}