{"id":"../node_modules/date-fns/esm/isEqual/index.js","dependencies":[{"name":"/Users/mjcampagna/Projects/react-parcel/package.json","includedInParent":true,"mtime":1558820963467},{"name":"/Users/mjcampagna/Projects/react-parcel/.babelrc","includedInParent":true,"mtime":1558820966347},{"name":"/Users/mjcampagna/Projects/react-parcel/node_modules/date-fns/esm/isEqual/package.json","includedInParent":true,"mtime":499162500000},{"name":"../toDate/index.js","loc":{"line":1,"column":19},"parent":"/Users/mjcampagna/Projects/react-parcel/node_modules/date-fns/esm/isEqual/index.js","resolved":"/Users/mjcampagna/Projects/react-parcel/node_modules/date-fns/esm/toDate/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEqual;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual(dirtyLeftDate, dirtyRightDate) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = (0, _index.default)(dirtyLeftDate);\n  var dateRight = (0, _index.default)(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":3,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":28,"column":15}},{"name":"isEqual","generated":{"line":37,"column":9},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":28,"column":24}},{"generated":{"line":37,"column":16},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":28,"column":15}},{"name":"dirtyLeftDate","generated":{"line":37,"column":17},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":28,"column":32}},{"generated":{"line":37,"column":30},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":28,"column":15}},{"name":"dirtyRightDate","generated":{"line":37,"column":32},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":28,"column":47}},{"generated":{"line":37,"column":46},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":28,"column":15}},{"generated":{"line":37,"column":48},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":28,"column":63}},{"generated":{"line":38,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":29,"column":2}},{"name":"arguments","generated":{"line":38,"column":6},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":29,"column":6}},{"generated":{"line":38,"column":15},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":29,"column":15}},{"name":"length","generated":{"line":38,"column":16},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":29,"column":16}},{"generated":{"line":38,"column":22},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":29,"column":6}},{"generated":{"line":38,"column":25},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":29,"column":25}},{"generated":{"line":38,"column":26},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":29,"column":2}},{"generated":{"line":38,"column":28},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":29,"column":28}},{"generated":{"line":39,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":30,"column":4}},{"generated":{"line":39,"column":10},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":30,"column":10}},{"name":"TypeError","generated":{"line":39,"column":14},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":30,"column":14}},{"generated":{"line":39,"column":23},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":30,"column":10}},{"generated":{"line":39,"column":24},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":31,"column":6}},{"name":"arguments","generated":{"line":39,"column":60},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":31,"column":42}},{"generated":{"line":39,"column":69},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":31,"column":51}},{"name":"length","generated":{"line":39,"column":70},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":31,"column":52}},{"generated":{"line":39,"column":76},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":31,"column":6}},{"generated":{"line":39,"column":79},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":31,"column":61}},{"generated":{"line":39,"column":89},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":30,"column":10}},{"generated":{"line":39,"column":90},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":30,"column":4}},{"generated":{"line":40,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":33,"column":3}},{"generated":{"line":42,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":35,"column":2}},{"name":"dateLeft","generated":{"line":42,"column":6},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":35,"column":6}},{"generated":{"line":42,"column":14},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":35,"column":14}},{"generated":{"line":42,"column":17},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":35,"column":17}},{"name":"dirtyLeftDate","generated":{"line":42,"column":37},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":35,"column":24}},{"generated":{"line":42,"column":50},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":35,"column":17}},{"generated":{"line":42,"column":51},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":35,"column":2}},{"generated":{"line":43,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":36,"column":2}},{"name":"dateRight","generated":{"line":43,"column":6},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":36,"column":6}},{"generated":{"line":43,"column":15},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":36,"column":15}},{"generated":{"line":43,"column":18},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":36,"column":18}},{"name":"dirtyRightDate","generated":{"line":43,"column":38},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":36,"column":25}},{"generated":{"line":43,"column":52},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":36,"column":18}},{"generated":{"line":43,"column":53},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":36,"column":2}},{"generated":{"line":44,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":2}},{"name":"dateLeft","generated":{"line":44,"column":9},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":9}},{"generated":{"line":44,"column":17},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":17}},{"name":"getTime","generated":{"line":44,"column":18},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":18}},{"generated":{"line":44,"column":25},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":9}},{"name":"dateRight","generated":{"line":44,"column":32},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":32}},{"generated":{"line":44,"column":41},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":41}},{"name":"getTime","generated":{"line":44,"column":42},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":42}},{"generated":{"line":44,"column":49},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":32}},{"generated":{"line":44,"column":51},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":37,"column":2}},{"generated":{"line":45,"column":0},"source":"../node_modules/date-fns/esm/isEqual/index.js","original":{"line":38,"column":1}}],"sources":{"../node_modules/date-fns/esm/isEqual/index.js":"import toDate from '../toDate/index.js'\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var dateLeft = toDate(dirtyLeftDate)\n  var dateRight = toDate(dirtyRightDate)\n  return dateLeft.getTime() === dateRight.getTime()\n}\n"},"lineCount":null}},"error":null,"hash":"a51d8c26366f92d10a51fa6d616d57a6","cacheData":{"env":{}}}